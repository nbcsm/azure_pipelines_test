# This template generate multiple jobs based on input parameters

parameters:
  platforms: []
  python_versions: ['3.6']
  tf_versions: ['']
  onnx_versions: ['']
  onnx_backends: {onnxruntime: ['']}
  job: {}

jobs:
- ${{ each platform in parameters.platforms }}:
  - job: ${{ parameters.job.name }}
    pool:
      ${{ if eq(platform, 'Linux') }}:
        vmImage: 'ubuntu-16.04'
      ${{ if eq(platform, 'Windows') }}:
        vmImage: 'vs2017-win2016'
      ${{ if eq(platform, 'macOS') }}:
        vmImage: 'macOS-10.13'

    # Generate full matrix
    strategy:
      matrix:
        ${{ each python_version in parameters.python_versions }}:
          ${{ each tf_version in parameters.tf_versions }}:
            ${{ each onnx_version in parameters.onnx_versions }}:
              ${{ each onnx_backend in parameters.onnx_backends }}:
                ${{ each onnx_backend_version in onnx_backend.value }}:
                  ${{ format('{0} Python{1} TF{2} Onnx{3} {4}{5}', platform, python_version, tf_version, onnx_version, onnx_backend.key, onnx_backend_version) }}:
                    AP_PYTHON_VERSION: '${{ python_version }}'

                    AP_TF_VERSION: '${{ tf_version }}'
                    ${{ if eq(tf_version, '') }}:
                      AP_PIP_TF_NAME: 'tensorflow'
                    ${{ if ne(tf_version, '') }}:
                      AP_PIP_TF_NAME: ${{ format('tensorflow=={0}', tf_version) }}

                    AP_ONNX_VERSION: '${{ onnx_version }}'
                    ${{ if eq(onnx_version, '') }}:
                      AP_PIP_ONNX_NAME: 'onnx'
                    ${{ if ne(onnx_version, '') }}:
                      AP_PIP_ONNX_NAME: ${{ format('onnx=={0}', onnx_version) }}

                    AP_ONNX_BACKEND: '${{ onnx_backend.key }}'
                    AP_ONNX_BACKEND_VERSION: '${{ onnx_backend_version }}'
                    ${{ if eq(onnx_backend_version, '') }}:
                      AP_PIP_ONNX_BACKEND_NAME: '${{ onnx_backend.key }}'
                    ${{ if ne(onnx_backend_version, '') }}:
                      AP_PIP_ONNX_BACKEND_NAME: ${{ format('{0}=={1}', onnx_backend.key, onnx_backend_version) }}

    # Insert all properties other than pool/steps/strategy
    ${{ each pair in parameters.job }}:
      ${{ if not(in(pair.key, 'pool', 'steps', 'strategy')) }}:
        ${{ pair.key }}: ${{ pair.value }}

    steps:
    - bash: env
      displayName: 'Display Environment Variables'

    # Insert original steps
    - ${{ parameters.job.steps }}

