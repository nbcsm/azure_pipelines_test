parameters:
  platforms: []
  python_versions: ['3.6']
  tf_versions: ['']
  onnx_versions: ['']
  onnx_backends: {onnxruntime: ['']}
  job: {}

jobs:
- ${{ each platform in parameters.platforms }}:
  - job: ${{ parameters.job.name }}
    pool:
      ${{ if eq(platform, 'Linux') }}:
        vmImage: 'ubuntu-16.04'
      ${{ if eq(platform, 'Windows') }}:
        vmImage: 'vs2017-win2016'
      ${{ if eq(platform, 'macOS') }}:
        vmImage: 'macOS-10.13'
    strategy:
      matrix:
        ${{ each python_version in parameters.python_versions }}:
          ${{ each tf_version in parameters.tf_versions }}:
            ${{ each onnx_version in parameters.onnx_versions }}:
              ${{ each onnx_backend in parameters.onnx_backends }}:
                ${{ each onnx_backend_version in onnx_backend.value }}:
                  ${{ format('{0} Python{1} TF{2} Onnx{3} {4}{5}', platform, python_version, tf_version, onnx_version, onnx_backend.key, onnx_backend_version) }}:
                    AP_PYTHON_VERSION: '${{ python_version }}'
                    AP_TF_VERSION: '${{ tf_version }}'
                    AP_ONNX_VERSION: '${{ onnx_version }}'
                    AP_ONNX_BACKEND: '${{ onnx_backend.key }}'
                    AP_ONNX_BACKEND_VERSION: '${{ onnx_backend_version }}'

    ${{ each pair in parameters.job }}:
      ${{ if not(in(pair.key, 'pool', 'steps', 'strategy')) }}:
        ${{ pair.key }}: ${{ pair.value }}

    steps:
    - bash: env
      displayName: 'Display Environment Variables'

    - ${{ job.steps }}

