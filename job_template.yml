parameters:
  name: ''
  platforms: []
  python_versions: ['3.6']
  tf_versions: ['']
  onnx_versions: ['']
  onnx_backends: {onnxruntime: ['']}

jobs:
- ${{ each platform in parameters.platforms }}:
  - ${{ if ne(parameters.name, '') }}:
    - job: ${{ parameters.name }}
  - ${{ if eq(parameters.name, '') }}:
    - job: ${{ platform }}
      pool:
        ${{ if eq(platform, 'Linux') }}:
          vmImage: 'ubuntu-16.04'
        ${{ if eq(platform, 'Windows') }}:
          vmImage: 'vs2017-win2016'
        ${{ if eq(platform, 'macOS') }}:
          vmImage: 'macOS-10.13'
      strategy:
        matrix:
          ${{ each python_version in parameters.python_versions }}:
            ${{ each tf_version in parameters.tf_versions }}:
              ${{ each onnx_version in parameters.onnx_versions }}:
                ${{ each onnx_backend in parameters.onnx_backends }}:
                  ${{ each onnx_backend_version in onnx_backend.value }}:
                    ${{ format('Python{0} TF{1} Onnx{2} {3}{4}', python_version, tf_version, onnx_version, onnx_backend.key, onnx_backend_version) }}:
                      AP_PYTHON_VERSION: '${{ python_version }}'
                      AP_TF_VERSION: '${{ tf_version }}'
                      AP_ONNX_VERSION: '${{ onnx_version }}'
                      AP_ONNX_BACKEND: '${{ onnx_backend.key }}'
                      AP_ONNX_BACKEND_VERSION: '${{ onnx_backend_version }}'

      steps:
      - bash: env
        displayName: 'env'
